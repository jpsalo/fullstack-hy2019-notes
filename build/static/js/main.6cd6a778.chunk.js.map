{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["services_notes","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","_ref","note","toggleImportance","label","react_default","a","createElement","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Fragment","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6cd6a778.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'Ei ola',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science 2019</em>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('virhe...')\n\n  const getNotes = () => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n    })\n  }\n  useEffect(getNotes, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  const toggleImportanceOf = id => () => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={toggleImportanceOf(note.id)}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">tallenna</button>\n      </form>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}